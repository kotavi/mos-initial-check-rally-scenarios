---
  NovaServers.boot_and_associate_floating_ip:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
        network: {}


  NovaServers.boot_and_live_migrate_server:
  - args:
      flavor:
        name: "{{flavor_name}}"
      image:
        name: "{{image_name}}"
      block_migration: {{block_migration}}
    runner:
      type: "constant"
      times: {{run_N_times}}
      concurrency: {{number_of_concurrent_scenarios}}
    context:
      users:
        tenants: {{number_of_tenants}}
        users_per_tenant: {{users_per_tenant}}


  NovaServers.boot_and_delete_multiple_servers:
    -
      args:
        image:
          name: "{{image_name}}"
        flavor:
          name: "{{flavor_name}}"
        count: {{nova_number_of_instances_to_boot}}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


  NovaKeypair.boot_and_delete_server_with_keypair:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
        boot_server_kwargs: {}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
        network:
          start_cidr: "100.1.0.0/26"


  NovaSecGroup.boot_and_delete_server_with_secgroups:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
        security_group_count: {{nova_security_group_count}}
        rules_per_security_group: {{nova_rules_per_security_group}}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
        network:
          start_cidr: "100.1.0.0/26"


  NovaServers.boot_and_delete_server:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
        force_delete: {{force_delete}}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}

    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
        auto_assign_nic: true
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
        network:
          start_cidr: "10.2.0.0/24"
          networks_per_tenant: {{nova_networks_per_tenant}}


  NovaServers.boot_and_get_console_output:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


  NovaServers.boot_and_list_server:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
        detailed: {{nova_detailed_info}}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}



  NovaServers.boot_and_live_migrate_server:
  - args:
      flavor:
        name: "{{flavor_name}}"
      image:
        name: "{{image_name}}"
      block_migration: {{block_migration}}
    runner:
      type: "constant"
      times: {{run_N_times}}
      concurrency: {{number_of_concurrent_scenarios}}
    context:
      users:
        tenants: {{number_of_tenants}}
        users_per_tenant: {{users_per_tenant}}


  NovaServers.boot_and_migrate_server:
  - args:
      flavor:
        name: "{{flavor_name}}"
      image:
        name: "{{image_name}}"
    runner:
      type: "constant"
      times: {{run_N_times}}
      concurrency: {{number_of_concurrent_scenarios}}
    context:
      users:
        tenants: {{number_of_tenants}}
        users_per_tenant: {{users_per_tenant}}


  NovaServers.boot_and_rebuild_server:
  - args:
      flavor:
        name: "{{flavor_name}}"
      from_image:
        name: "{{image_name}}"
      to_image:
        name: "{{nova_rebuild_to_image_name}}"
    runner:
      type: "constant"
      times: {{run_N_times}}
      concurrency: {{number_of_concurrent_scenarios}}
    context:
      users:
        tenants: {{number_of_tenants}}
        users_per_tenant: {{users_per_tenant}}


  NovaServers.boot_and_show_server:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


  NovaServers.boot_and_update_server:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


  NovaServers.boot_and_bounce_server:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
        force_delete: {{force_delete}}
        actions:
          -
            hard_reboot: 1
          -
            soft_reboot: 1
          -
            stop_start: 1
          -
            rescue_unrescue: 1
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


  NovaServers.boot_server_from_volume_and_delete:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
        volume_size: {{cinder_volume_size}}
        volume_type: "{{volume_type}}"
        force_delete: {{force_delete}}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


  NovaServers.boot_server_from_volume_and_resize:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
        to_flavor:
            name: "{{nova_rebuild_to_flavor_name}}"
        confirm: {{nova_confirm_resize}}
        volume_size: {{cinder_volume_size}}
        force_delete: {{force_delete}}
        do_delete: {{do_delete}}
        boot_server_kwargs: {}
        create_volume_kwargs: {}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


  NovaServers.boot_server_from_volume_snapshot:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
        volume_size: {{cinder_volume_size}}
        volume_type: "{{volume_type}}"
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


  NovaServers.boot_server_from_volume:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
        volume_size: {{cinder_volume_size}}
        volume_type: "{{volume_type}}"
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


  NovaServers.boot_lock_unlock_and_delete:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


  NovaSecGroup.boot_server_and_add_secgroups:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
        security_group_count: {{nova_security_group_count}}
        rules_per_security_group: {{nova_rules_per_security_group}}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
        network:
          start_cidr: "100.1.0.0/26"
      sla:
        failure_rate:
          max: {{sla_failure_rate_max}}


  NovaServers.boot_server_associate_and_dissociate_floating_ip:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
        network: {}
      sla:
        failure_rate:
          max: {{sla_failure_rate_max}}



  NovaServers.boot_server_attach_created_volume_and_live_migrate:
  - args:
      flavor:
        name: "{{flavor_name}}"
      image:
        name: "{{image_name}}"
      size: {{cinder_volume_size}}
      block_migration: {{block_migration}}
      boot_server_kwargs: {}
      create_volume_kwargs: {}
    runner:
      type: "constant"
      times: {{run_N_times}}
      concurrency: {{number_of_concurrent_scenarios}}
    context:
      users:
        tenants: {{number_of_tenants}}
        users_per_tenant: {{users_per_tenant}}


  NovaServers.boot_server_attach_created_volume_and_resize:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
        to_flavor:
            name: "{{nova_rebuild_to_flavor_name}}"
        confirm: true
        volume_size: {{cinder_volume_size}}
        force_delete: {{force_delete}}
        do_delete: {{do_delete}}
        boot_server_kwargs: {}
        create_volume_kwargs: {}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}

  NovaServers.boot_server_from_volume_and_live_migrate:
  - args:
      flavor:
        name: "{{flavor_name}}"
      image:
        name: "{{image_name}}"
      block_migration: {{block_migration}}
      volume_size: {{cinder_volume_size}}
      volume_type: "{{volume_type}}"
      force_delete: {{force_delete}}
    runner:
      type: "constant"
      times: {{run_N_times}}
      concurrency: {{number_of_concurrent_scenarios}}
    context:
      users:
        tenants: {{number_of_tenants}}
        users_per_tenant: {{users_per_tenant}}


  NovaServers.snapshot_server:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
        force_delete: {{force_delete}}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


  NovaServers.boot_server:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


  NovaAggregates.create_aggregate_add_and_remove_host:
    -
      args:
        availability_zone: "{{availability_zone}}"
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
      sla:
        failure_rate:
          max: {{sla_failure_rate_max}}


  NovaAggregates.create_aggregate_add_host_and_boot_server:
    -
      args:
        image:
          name: "{{image_name}}"
        metadata:
          test_metadata: "true"
        availability_zone: "{{availability_zone}}"
        ram: {{flavor_specification['ram']}}
        vcpus: {{flavor_specification['vcpus']}}
        disk: {{flavor_specification['disk']}}
        boot_server_kwargs: {}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
      sla:
        failure_rate:
          max: {{sla_failure_rate_max}}


  NovaAggregates.create_and_delete_aggregate:
    -
      args:
        availability_zone: "{{availability_zone}}"
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
      sla:
        failure_rate:
          max: {{sla_failure_rate_max}}


  NovaFlavors.create_and_delete_flavor:
    -
      runner:
        type: "constant"
        concurrency: {{number_of_concurrent_scenarios}}
        times: {{run_N_times}}
      args: {
        ram: {{flavor_specification['ram']}}
        vcpus: {{flavor_specification['vcpus']}}
        disk: {{flavor_specification['disk']}}
      }
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
      sla:
        failure_rate:
          max: {{sla_failure_rate_max}}


  NovaFloatingIpsBulk.create_and_delete_floating_ips_bulk:
    -
      args:
        start_cidr: "10.2.0.0/24"
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


  NovaKeypair.create_and_delete_keypair:
    -
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


  NovaSecGroup.create_and_delete_secgroups:
    -
      args:
        security_group_count: {{nova_security_group_count}}
        rules_per_security_group: {{nova_rules_per_security_group}}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


  NovaAggregates.create_and_get_aggregate_details:
    -
      args:
        availability_zone: "{{availability_zone}}"
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
      sla:
        failure_rate:
          max: {{sla_failure_rate_max}}



  NovaFlavors.create_and_get_flavor:
    -
      runner:
        type: "constant"
        concurrency: {{number_of_concurrent_scenarios}}
        times: {{run_N_times}}
      args: {
        ram: {{flavor_specification['ram']}}
        vcpus: {{flavor_specification['vcpus']}}
        disk: {{flavor_specification['disk']}}
      }
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
      sla:
        failure_rate:
          max: {{sla_failure_rate_max}}


  NovaAggregates.create_and_list_aggregates:
    -
      args:
        availability_zone: "{{availability_zone}}"
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
      sla:
        failure_rate:
          max: {{sla_failure_rate_max}}


  NovaFlavors.create_and_list_flavor_access:
    -
      args: {
        ram: {{flavor_specification['ram']}}
        vcpus: {{flavor_specification['vcpus']}}
        disk: {{flavor_specification['disk']}}
      }
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}


  NovaKeypair.create_and_list_keypairs:
    -
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}

  NovaSecGroup.create_and_list_secgroups:
    -
      args:
        security_group_count: {{nova_security_group_count}}
        rules_per_security_group: {{nova_rules_per_security_group}}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


  NovaServerGroups.create_and_list_server_groups:
    -
      args:
        kwargs:
          policies: ["affinity"]
        all_projects: false
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
      sla:
        failure_rate:
          max: {{sla_failure_rate_max}}


  NovaAggregates.create_and_update_aggregate:
    -
      args:
        availability_zone: "{{availability_zone}}"
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
      sla:
        failure_rate:
          max: {{sla_failure_rate_max}}


  NovaSecGroup.create_and_update_secgroups:
    -
      args:
        security_group_count: {{nova_security_group_count}}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


  NovaFlavors.create_flavor_and_add_tenant_access:
    -
      runner:
        type: "constant"
        concurrency: {{number_of_concurrent_scenarios}}
        times: {{run_N_times}}
      args: {
        ram: {{flavor_specification['ram']}}
        vcpus: {{flavor_specification['vcpus']}}
        disk: {{flavor_specification['disk']}}
      }
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
      sla:
        failure_rate:
          max: {{sla_failure_rate_max}}



  NovaFlavors.create_flavor_and_set_keys:
    -
      runner:
        type: "constant"
        concurrency: {{number_of_concurrent_scenarios}}
        times: {{run_N_times}}
      args: {
        ram: {{flavor_specification['ram']}}
        vcpus: {{flavor_specification['vcpus']}}
        disk: {{flavor_specification['disk']}}
      }
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
      sla:
        failure_rate:
          max: {{sla_failure_rate_max}}


  NovaFlavors.create_flavor:
    -
      args: args: {
        ram: {{flavor_specification['ram']}}
        vcpus: {{flavor_specification['vcpus']}}
        disk: {{flavor_specification['disk']}}
      }
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}


  NovaAgents.list_agents:
    -
      runner:
        type: "constant"
        concurrency: {{number_of_concurrent_scenarios}}
        times: {{run_N_times}}


  NovaAggregates.list_aggregates:
    -
      runner:
        type: "constant"
        concurrency: {{number_of_concurrent_scenarios}}
        times: {{run_N_times}}


  NovaHosts.list_and_get_hosts:
    -
      args: {}
      runner:
        type: "constant"
        concurrency: {{number_of_concurrent_scenarios}}
        times: {{run_N_times}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
      sla:
        failure_rate:
          max: {{sla_failure_rate_max}}


  NovaHypervisors.list_and_get_hypervisors:
    -
      args:
        detailed: {{nova_detailed_info}}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
      sla:
        failure_rate:
          max: {{sla_failure_rate_max}}


  NovaHypervisors.list_and_get_uptime_hypervisors:
    -
      args:
        detailed: {{nova_detailed_info}}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
      sla:
        failure_rate:
          max: {{sla_failure_rate_max}}


  NovaHypervisors.list_and_search_hypervisors:
    -
      args:
        detailed: {{nova_detailed_info}}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
      sla:
        failure_rate:
          max: {{sla_failure_rate_max}}


  NovaAvailabilityZones.list_availability_zones:
    -
      args:
        detailed: {{nova_detailed_info}}
      runner:
        type: "constant"
        concurrency: {{number_of_concurrent_scenarios}}
        times: {{run_N_times}}


  NovaFlavors.list_flavors:
    -
      args:
        detailed: {{nova_detailed_info}}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


  NovaHosts.list_hosts:
    -
      runner:
        type: "constant"
        concurrency: {{number_of_concurrent_scenarios}}
        times: {{run_N_times}}


  NovaHypervisors.list_hypervisors:
    -
      args:
        detailed: {{nova_detailed_info}}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}


  NovaImages.list_images:
    -
      args:
        detailed: {{nova_detailed_info}}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


  NovaServers.list_servers:
    -
      args:
        detailed: {{nova_detailed_info}}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
        servers:
          flavor:
              name: "{{flavor_name}}"
          image:
              name: "{{image_name}}"
          servers_per_tenant: {{servers_per_tenant_before_benchmarking}}


  NovaServices.list_services:
    -
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}


  NovaServers.pause_and_unpause_server:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
        force_delete: {{force_delete}}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


  NovaServers.resize_server:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
        to_flavor:
            name: "{{nova_rebuild_to_flavor_name}}"
        confirm: {{nova_confirm_resize}}
        force_delete: {{force_delete}}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


  NovaServers.resize_shutoff_server:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
        to_flavor:
            name: "{{nova_rebuild_to_flavor_name}}"
        confirm: {{nova_confirm_resize}}
        force_delete: {{force_delete}}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
      sla:
        failure_rate:
          max: {{sla_failure_rate_max}}


  NovaServers.shelve_and_unshelve_server:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
        force_delete: {{force_delete}}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


  NovaHypervisors.statistics_hypervisors:
    -
      args: {}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}
      sla:
        failure_rate:
          max: {{sla_failure_rate_max}}


  NovaServers.suspend_and_resume_server:
    -
      args:
        flavor:
            name: "{{flavor_name}}"
        image:
            name: "{{image_name}}"
        force_delete: {{force_delete}}
      runner:
        type: "constant"
        times: {{run_N_times}}
        concurrency: {{number_of_concurrent_scenarios}}
      context:
        users:
          tenants: {{number_of_tenants}}
          users_per_tenant: {{users_per_tenant}}


